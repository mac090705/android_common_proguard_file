# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#指定代码的压缩级别
-optimizationpasses 5
#不使用大小写混合类名
-dontusemixedcaseclassnames
#不跳过library中的非public的类
-dontskipnonpubliclibraryclasses
#打印混淆的详细信息
-verbose
# 混淆时所采用的算法
-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*
# 不进行优化，优化可能造成一些潜在风险，不能保证在所有版本的Dalvik虚拟机上都能运行
-dontoptimize
# 不进行预验证。这个预校验是作用在Java平台上的，Android平台上不需要这项功能，去掉之后还可以加快混淆速度。 
-dontpreverify
# proguard在做混淆之前最开始会默认对代码进行压缩，为了增加反编译的难度可以选择不压缩 
-dontshrink 
-ignorewarnings  
# 过滤泛型
-keepattributes Signature
# 对注解中的参数进行保留
-keepattributes *Annotation*
-keepattributes *JavascriptInterface*  
-keep class * extends java.lang.annotation.Annotation { *; }
# 接入Google原生的一些服务时使用的
-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService

# 不混淆任何包含native方法的类的类名以及native方法名
-keepclasseswithmembernames class * {
    native <methods>;
}
# 删除日志的调用
#-assumenosideeffects class android.util.Log {
#  public static boolean isLoggable(java.lang.String,int);
#  public static int v(...);
#  public static int i(...);
#  public static int w(...);
#  public static int d(...);
#  public static int e(...);
#}

# 保持自定义控件类不被混淆
-keepclasseswithmembers class * {
    public <init>(android.content.Context);
}
-keepclasseswithmembers class * {                                               
    public <init>(android.content.Context, android.util.AttributeSet);
}
-keepclasseswithmembers class * {
    public <init>(android.content.Context, android.util.AttributeSet, int);     
}

-keepclasseswithmembers class * {
    void onClick*(...);
}
-keepclasseswithmembers class * {
    *** *Callback(...);
}

# 不混淆任何一个View中的setXxx()和getXxx()方法，因为属性动画需要有相应的setter和getter的方法实现，混淆了就无法工作了
-keepclassmembers public class * extends android.view.View {
   void set*(***);
   *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute .Such as onClick
-keepclassmembers class * extends android.app.Activity {
   public void *(android.view.View);
   private void * (android.view.View);
   public boolean * (android.view.View);
   private boolean * (android.view.View);
   public void * (android.widget.AdapterView, android.view.View, int, long);
   public boolean * (android.view.View, android.view.MotionEvent);
   public void * (android.view.View, boolean);
   private void * (android.view.View, boolean);
   public void * (android.view.View, int);
	private void * (android.view.View, int);
}

-keepclassmembers class * extends android.app.Fragment{
	public void * (android.view.View);
	private void * (android.view.View);
	public boolean * (android.view.View);
	private boolean * (android.view.View);
	public void * (android.widget.AdapterView, android.view.View, int, long);
	public boolean * (android.view.View, android.view.MotionEvent);
	public void * (android.view.View, boolean);
    private void * (android.view.View, boolean);
    public void * (android.view.View, int);
	private void * (android.view.View, int);
}

-keepclassmembers class * extends android.support.v4.app.Fragment{
	public void * (android.view.View);
	private void * (android.view.View);
	public boolean * (android.view.View);
	private boolean * (android.view.View);
	public void * (android.widget.AdapterView, android.view.View, int, long);
	public boolean * (android.view.View, android.view.MotionEvent);
	public void * (android.view.View, boolean);
   private void * (android.view.View, boolean);
   public void * (android.view.View, int);
	private void * (android.view.View, int);
}

-keepclassmembers class * extends android.app.Dialog{
	public void * (android.view.View);
	private void * (android.view.View);
	public boolean * (android.view.View);
	private boolean * (android.view.View);
	public void * (android.widget.AdapterView, android.view.View, int, long);
	public boolean * (android.view.View, android.view.MotionEvent);
	public void * (android.view.View, boolean);
    private void * (android.view.View, boolean);
    public void * (android.view.View, int);
	private void * (android.view.View, int);
}

#EventBus
-keepclassmembers class ** {
    public void onEvent*(**);
}

# 不混淆枚举中的values()和valueOf()方法
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

# 不混淆Parcelable实现类中的CREATOR字段
-keep class * implements android.os.Parcelable {
<fields>;
  public static final android.os.Parcelable$Creator *;
}

-keep class * implements java.io.Serializable{
	 <fields>;
}

-keepclassmembers class * implements java.io.Serializable {
    static final long serialVersionUID;   
    private static final java.io.ObjectStreamField[] serialPersistentFields;   
    private void writeObject(java.io.ObjectOutputStream);   
    private void readObject(java.io.ObjectInputStream);   
    java.lang.Object writeReplace();   
    java.lang.Object readResolve();   
}

# 不混淆R文件中的所有静态字段
-keepclassmembers class **.R$* {
    public static <fields>;
}

# The support library contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version.  We know about them, and they are safe.
-dontwarn android.support.**

#不进行混淆保持原样   
-keep class android.** {*; }
-keep public class * extends android.view
-keep public class * extends android.app.Fragment  
-keep public class * extends android.app.Activity
-keep public class * extends android.app.Application
-keep public class * extends android.app.Service
-keep public class * extends android.content.BroadcastReceiver
-keep public class * extends android.content.ContentProvider
-keep public class * extends android.app.backup.BackupAgentHelper
-keep public class * extends android.preference.Preference
-keep public class * extends android.support.v4.**
-keep public class com.android.vending.licensing.ILicensingService
-keep class android.support.v4.**{*;}
-keep class * extends android.app.Dialog

##---------------Begin: proguard configuration for Gson  ----------  
# Gson uses generic type information stored in a class file when working with fields. Proguard  
# removes such information by default, so configure it to keep all of it.  
-keepattributes Signature  
  
# For using GSON annotation  
-keepattributes *Annotation*  
  
# Gson specific classes  
-keep class sun.misc.Unsafe { *; }  
#-keep class com.google.gson.stream.** { *; }  
  
# Application classes that will be serialized/deserialized over Gson  
-keep class com.google.gson.examples.android.model.** { *; }  
  
##---------------End: proguard configuration for Gson  ----------  

#该注解不被混淆
-keepattributes JavascriptInterface

#保留行号信息
-keepattributes SourceFile,LineNumberTable
